version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis-master
    environment:
      - NODE_ENV=development
      - PORT=5000
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dataflowdb
      - REDIS_HOST=redis-master
      - REDIS_PORT=6379
    volumes:
      - ./backend:/app
      - /app/node_modules

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=dataflowdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis-master:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-master-data:/data
    command: redis-server --appendonly yes

  redis-replica-1:
    image: redis:6-alpine
    depends_on:
      - redis-master
    command: redis-server --slaveof redis-master 6379 --appendonly yes
    volumes:
      - redis-replica-1-data:/data

  redis-replica-2:
    image: redis:6-alpine
    depends_on:
      - redis-master
    command: redis-server --slaveof redis-master 6379 --appendonly yes
    volumes:
      - redis-replica-2-data:/data
      
volumes:
  postgres-data:
  redis-master-data:
  redis-replica-1-data:
  redis-replica-2-data: