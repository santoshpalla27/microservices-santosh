version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api  # Change IP if needed
    networks:
      - app_net

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_NAME=userdb
      - REDIS_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
      - REDIS_PASSWORD=bitnami123
      - PORT=5000
    networks:
      - app_net

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=userdb
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_net

  redis-node-0:
    image: bitnami/redis-cluster:latest
    container_name: redis-node-0
    environment:
      - REDIS_PASSWORD=bitnami123
      - REDIS_PORT_NUMBER=6379
      - REDIS_CLUSTER_ANNOUNCE_IP=redis-node-0
      - REDIS_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
    volumes:
      - redis-data-0:/bitnami
    networks:
      - app_net
    ports:
      - "7000:6379"

  redis-node-1:
    image: bitnami/redis-cluster:latest
    container_name: redis-node-1
    environment:
      - REDIS_PASSWORD=bitnami123
      - REDIS_PORT_NUMBER=6379
      - REDIS_CLUSTER_ANNOUNCE_IP=redis-node-1
      - REDIS_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
    volumes:
      - redis-data-1:/bitnami
    networks:
      - app_net
    ports:
      - "7001:6379"

  redis-node-2:
    image: bitnami/redis-cluster:latest
    container_name: redis-node-2
    environment:
      - REDIS_PASSWORD=bitnami123
      - REDIS_PORT_NUMBER=6379
      - REDIS_CLUSTER_ANNOUNCE_IP=redis-node-2
      - REDIS_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
    volumes:
      - redis-data-2:/bitnami
    networks:
      - app_net
    ports:
      - "7002:6379"

  redis-node-3:
    image: bitnami/redis-cluster:latest
    container_name: redis-node-3
    environment:
      - REDIS_PASSWORD=bitnami123
      - REDIS_PORT_NUMBER=6379
      - REDIS_CLUSTER_ANNOUNCE_IP=redis-node-3
      - REDIS_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
    volumes:
      - redis-data-3:/bitnami
    networks:
      - app_net
    ports:
      - "7003:6379"

  redis-node-4:
    image: bitnami/redis-cluster:latest
    container_name: redis-node-4
    environment:
      - REDIS_PASSWORD=bitnami123
      - REDIS_PORT_NUMBER=6379
      - REDIS_CLUSTER_ANNOUNCE_IP=redis-node-4
      - REDIS_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
    volumes:
      - redis-data-4:/bitnami
    networks:
      - app_net
    ports:
      - "7004:6379"

  redis-node-5:
    image: bitnami/redis-cluster:latest
    container_name: redis-node-5
    environment:
      - REDIS_PASSWORD=bitnami123
      - REDIS_PORT_NUMBER=6379
      - REDIS_CLUSTER_ANNOUNCE_IP=redis-node-5
      - REDIS_NODES=redis-node-0:6379,redis-node-1:6379,redis-node-2:6379,redis-node-3:6379,redis-node-4:6379,redis-node-5:6379
    volumes:
      - redis-data-5:/bitnami
    networks:
      - app_net
    ports:
      - "7005:6379"

  cluster-init:
    image: bitnami/redis-cluster:latest
    depends_on:
      - redis-node-0
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    networks:
      - app_net
    restart: "no"
    command: >
      bash -c '
        echo "ðŸ”„ Waiting for Redis nodes to be ready..."
        sleep 10
        for NODE in redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5; do
          until redis-cli -h $${NODE} -a bitnami123 ping | grep -q PONG; do
            echo "Waiting for $${NODE}..."
            sleep 2
          done
          echo "$${NODE} is ready!"
        done
        
        echo "ðŸš€ Creating Redis Cluster..."
        echo "yes" | redis-cli --cluster create \
          redis-node-0:6379 redis-node-1:6379 redis-node-2:6379 \
          redis-node-3:6379 redis-node-4:6379 redis-node-5:6379 \
          --cluster-replicas 1 -a bitnami123
        
        echo "âœ… Cluster initialization completed."
      '

networks:
  app_net:
    driver: bridge

volumes:
  mysql_data:
  redis-data-0:
  redis-data-1:
  redis-data-2:
  redis-data-3:
  redis-data-4:
  redis-data-5:
